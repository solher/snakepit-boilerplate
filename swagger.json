{"consumes":["application/json"],"produces":["application/json"],"schemes":["http"],"swagger":"2.0","info":{"description":"A simple Snakepit seed.","title":"Snakepit seed","version":"0.0.0"},"basePath":"/server","paths":{"/users":{"get":{"description":"Finds all the users matched by filter from the data source.","tags":["Users"],"summary":"Find","operationId":"UsersFind","parameters":[{"type":"string","description":"JSON filter defining offset, limit, sort, where and options","name":"Filter","in":"query"}],"responses":{"200":{"$ref":"#/responses/UsersResponse"}}},"put":{"description":"Updates all the users matched by filter in the data source.","tags":["Users"],"summary":"Update","operationId":"UsersUpdate","parameters":[{"type":"string","description":"JSON filter defining offset, limit, sort, where and options","name":"Filter","in":"query"},{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"$ref":"#/responses/UserResponse"}}},"post":{"description":"Creates one or multiple users in the data source.","tags":["Users"],"summary":"Create","operationId":"UsersCreate","parameters":[{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"201":{"$ref":"#/responses/UserResponse"}}},"delete":{"description":"Deletes all the users matched by filter in the data source.","tags":["Users"],"summary":"Delete","operationId":"UsersDelete","parameters":[{"type":"string","description":"JSON filter defining offset, limit, sort, where and options","name":"Filter","in":"query"}],"responses":{"200":{"$ref":"#/responses/UsersResponse"}}}},"/users/me/session":{"get":{"description":"Returns the current session.","tags":["Users"],"summary":"Current session","operationId":"UsersCurrentSession","responses":{"200":{"$ref":"#/responses/SessionResponse"}}}},"/users/me/signout":{"post":{"description":"Signs out the current user.","tags":["Users"],"summary":"Sign out","operationId":"UsersSignout","responses":{"200":{"$ref":"#/responses/SessionResponse"}}}},"/users/signin":{"post":{"description":"Signs in a user and returns a new session.","tags":["Users"],"summary":"Sign in","operationId":"UsersSignin","parameters":[{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Credentials"}}],"responses":{"201":{"$ref":"#/responses/SessionResponse"}}}},"/users/signup":{"post":{"description":"Signs up a user and returns it.","tags":["Users"],"summary":"Sign up","operationId":"UsersSignup","responses":{"201":{"$ref":"#/responses/UserResponse"}}}},"/users/{key}":{"get":{"description":"Finds a user by key from the data source.","tags":["Users"],"summary":"Find by key","operationId":"UsersFindByKey","parameters":[{"type":"string","description":"User key","name":"Key","in":"path","required":true},{"type":"string","description":"JSON filter defining offset, limit, sort, where and options","name":"Filter","in":"query"}],"responses":{"200":{"$ref":"#/responses/UserResponse"}}},"put":{"description":"Updates a user by key in the data source.","tags":["Users"],"summary":"Update by key","operationId":"UsersUpdateByKey","parameters":[{"type":"string","description":"User key","name":"Key","in":"path","required":true},{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"$ref":"#/responses/UserResponse"}}},"delete":{"description":"Deletes a user by key in the data source.","tags":["Users"],"summary":"Delete by key","operationId":"UsersDeleteByKey","parameters":[{"type":"string","description":"User key","name":"Key","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/UserResponse"}}}},"/users/{key}/password":{"post":{"description":"Updates the user password in the data source.","tags":["Users"],"summary":"Update password","operationId":"UsersUpdatePassword","parameters":[{"name":"Body","in":"body","required":true,"schema":{"$ref":"#/definitions/Password"}},{"type":"string","description":"User key","name":"Key","in":"path","required":true}],"responses":{"200":{"$ref":"#/responses/UserResponse"}}}}},"definitions":{"Credentials":{"type":"object","properties":{"email":{"description":"The user email.","type":"string","x-go-name":"Email"},"password":{"description":"The user password.","type":"string","x-go-name":"Password"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"Duration":{"description":"A Duration represents the elapsed time between two instants\nas an int64 nanosecond count.  The representation limits the\nlargest representable duration to approximately 290 years.","x-go-package":"time"},"Month":{"title":"A Month specifies a month of the year (January = 1, ...).","x-go-package":"time"},"Password":{"type":"object","properties":{"password":{"description":"The user password.","type":"string","x-go-name":"Password"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"Session":{"type":"object","required":["agent","policies"],"properties":{"agent":{"description":"The end user agent.","type":"string","x-go-name":"Agent"},"created":{"description":"The creation timestamp.","x-go-name":"Created","$ref":"#/definitions/Time"},"ownerToken":{"description":"An optional token to find a user's sessions.","type":"string","x-go-name":"OwnerToken"},"payload":{"description":"A client non checked custom payload.","type":"string","x-go-name":"Payload"},"policies":{"description":"The list of the policy names associated with the session.","type":"array","items":{"type":"string"},"x-go-name":"Policies"},"role":{"description":"The role name of the session.","type":"string","x-go-name":"Role"},"token":{"description":"The authentication token identifying the session.","type":"string","x-go-name":"Token"},"validTo":{"description":"The validity time limit of the session.","x-go-name":"ValidTo","$ref":"#/definitions/Time"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"Time":{"description":"Programs using times should typically store and pass them as values,\nnot pointers.  That is, time variables and struct fields should be of\ntype time.Time, not *time.Time.  A Time value can be used by\nmultiple goroutines simultaneously.\n\nTime instants can be compared using the Before, After, and Equal methods.\nThe Sub method subtracts two instants, producing a Duration.\nThe Add method adds a Time and a Duration, producing a Time.\n\nThe zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.\nAs this time is unlikely to come up in practice, the IsZero method gives\na simple way of detecting a time that has not been initialized explicitly.\n\nEach Time has associated with it a Location, consulted when computing the\npresentation form of the time, such as in the Format, Hour, and Year methods.\nThe methods Local, UTC, and In return a Time with a specific location.\nChanging the location in this way changes only the presentation; it does not\nchange the instant in time being denoted and therefore does not affect the\ncomputations described in earlier paragraphs.\n\nNote that the Go == operator compares not just the time instant but also the\nLocation. Therefore, Time values should not be used as map or database keys\nwithout first guaranteeing that the identical Location has been set for all\nvalues, which can be achieved through use of the UTC or Local method.","type":"object","title":"A Time represents an instant in time with nanosecond precision.","x-go-package":"time"},"User":{"type":"object","properties":{"_id":{"description":"The document handle. Format: ':collection/:key'","type":"string","x-go-name":"ID"},"_key":{"description":"The document's unique key.","type":"string","x-go-name":"Key"},"_rev":{"description":"The document's revision token. Changes at each update.","type":"string","x-go-name":"Rev"},"email":{"description":"The user email.","type":"string","x-go-name":"Email"},"firstName":{"description":"The user first name.","type":"string","x-go-name":"FirstName"},"lastName":{"description":"The user last name.","type":"string","x-go-name":"LastName"},"ownerToken":{"description":"A unique identifier across the auth system.","type":"string","x-go-name":"OwnerToken"},"password":{"description":"The user password.","type":"string","x-go-name":"Password"},"role":{"description":"The role name of the user.","type":"string","x-go-name":"Role"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"Weekday":{"title":"A Weekday specifies a day of the week (Sunday = 0, ...).","x-go-package":"time"},"credentialsBodyParam":{"type":"object","required":["Body"],"properties":{"Body":{"$ref":"#/definitions/Credentials"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"passwordBodyParam":{"type":"object","required":["Body"],"properties":{"Body":{"$ref":"#/definitions/Password"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"sessionResponse":{"type":"object","properties":{"Body":{"description":"in: body","$ref":"#/definitions/Session"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"userResponse":{"type":"object","properties":{"Body":{"description":"in: body","$ref":"#/definitions/User"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"usersBodyParam":{"type":"object","required":["Body"],"properties":{"Body":{"$ref":"#/definitions/User"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"usersFilterParam":{"type":"object","properties":{"Filter":{"description":"JSON filter defining offset, limit, sort, where and options\n\nin: query","type":"string"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"usersKeyParam":{"type":"object","required":["Key"],"properties":{"Key":{"description":"User key","type":"string"}},"x-go-package":"github.com/solher/snakepit-seed/models"},"usersResponse":{"type":"object","properties":{"Body":{"description":"in: body","type":"array","items":{"$ref":"#/definitions/User"}}},"x-go-package":"github.com/solher/snakepit-seed/models"}},"responses":{"SessionResponse":{"schema":{"$ref":"#/definitions/Session"}},"UserResponse":{"schema":{"$ref":"#/definitions/User"}},"UsersResponse":{"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}}}